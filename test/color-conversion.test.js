var assert = require('assert');
var util = require('util');
var blend = require('..');

var colors = [
    [ 255, 255, 255 ],
    [ 0, 0, 0 ],
    [ 234, 177, 235 ],
    [ 40, 42, 244 ],
    [ 120, 41, 34 ],
    [ 128, 30, 38 ],
    [ 24, 8, 16 ],
    [ 83, 205, 243 ],
    [ 156, 97, 2 ],
    [ 215, 184, 190 ],
    [ 238, 117, 223 ],
    [ 72, 223, 59 ],
    [ 0, 15, 188 ],
    [ 165, 129, 51 ],
    [ 88, 226, 12 ],
    [ 169, 237, 208 ],
    [ 15, 17, 87 ],
    [ 208, 232, 189 ],
    [ 1, 134, 40 ],
    [ 11, 170, 16 ],
    [ 244, 190, 77 ],
    [ 5, 148, 174 ],
    [ 93, 68, 166 ],
    [ 227, 90, 93 ],
    [ 241, 242, 113 ],
    [ 120, 224, 148 ],
    [ 12, 142, 82 ],
    [ 74, 78, 67 ],
    [ 186, 67, 132 ],
    [ 100, 137, 159 ],
    [ 193, 192, 89 ],
    [ 165, 133, 197 ]
];

var expected = [
    [ 0, 0, 1 ],
    [ 0, 0, 0 ],
    [ 0.8304597701149424, 0.5918367346938775, 0.807843137254902 ],
    [ 0.6650326797385621, 0.9026548672566372, 0.5568627450980392 ],
    [ 0.013565891472868222, 0.5584415584415585, 0.30196078431372547 ],
    [ 0.9863945578231292, 0.620253164556962, 0.30980392156862746 ],
    [ 0.9166666666666666, 0.5, 0.06274509803921569 ],
    [ 0.5395833333333333, 0.8695652173913042, 0.6392156862745098 ],
    [ 0.1028138528138528, 0.9746835443037976, 0.30980392156862746 ],
    [ 0.967741935483871, 0.2792792792792793, 0.7823529411764706 ],
    [ 0.8539944903581267, 0.7806451612903226, 0.696078431372549 ],
    [ 0.3201219512195122, 0.7192982456140351, 0.5529411764705883 ],
    [ 0.6533687943262411, 1, 0.3686274509803922 ],
    [ 0.11403508771929823, 0.5277777777777778, 0.42352941176470593 ],
    [ 0.27414330218068533, 0.8991596638655461, 0.4666666666666667 ],
    [ 0.42892156862745096, 0.6538461538461542, 0.7960784313725491 ],
    [ 0.6620370370370371, 0.7058823529411764, 0.2 ],
    [ 0.2596899224806202, 0.4831460674157301, 0.8254901960784313 ],
    [ 0.38220551378446116, 0.9851851851851853, 0.2647058823529412 ],
    [ 0.3385744234800839, 0.8784530386740332, 0.3549019607843137 ],
    [ 0.11277445109780437, 0.8835978835978837, 0.6294117647058823 ],
    [ 0.5256410256410257, 0.9441340782122903, 0.3509803921568628 ],
    [ 0.7091836734693877, 0.4188034188034188, 0.45882352941176474 ],
    [ 0.9963503649635036, 0.7098445595854921, 0.6215686274509804 ],
    [ 0.16795865633074936, 0.8322580645161289, 0.696078431372549 ],
    [ 0.3782051282051282, 0.6265060240963857, 0.6745098039215687 ],
    [ 0.4230769230769231, 0.844155844155844, 0.3019607843137255 ],
    [ 0.22727272727272727, 0.07586206896551727, 0.28431372549019607 ],
    [ 0.9089635854341737, 0.4703557312252964, 0.49607843137254903 ],
    [ 0.5621468926553672, 0.23505976095617528, 0.5078431372549019 ],
    [ 0.16506410256410256, 0.456140350877193, 0.5529411764705883 ],
    [ 0.75, 0.35555555555555557, 0.6470588235294118 ]
];

function nearlyEqual(array1,array2, tolerance) {
    var r = Math.abs(array1[0] - array2[0])
    var g = Math.abs(array1[1] - array2[1])
    var b = Math.abs(array1[2] - array2[2])
    assert.ok(r <= tolerance, 'r channel differs "' + r + '" more than accepted tolerance: ' + tolerance)
    assert.ok(g <= tolerance, 'g channel differs "' + g + '" more than accepted tolerance: ' + tolerance)
    assert.ok(b <= tolerance, 'b channel differs "' + b + '" more than accepted tolerance: ' + tolerance)
}

describe('roundtripping rgb->hsl->rgb in both js and c++', function() {
    colors.forEach(function(c, index) {
        it('parse ' + util.inspect(c), function() {
            var hsl = blend.rgb2hsl(c[0],c[1],c[2]);
            var rgb = blend.hsl2rgb(hsl[0],hsl[1],hsl[2]);
            nearlyEqual(hsl, expected[index], 0.001);
            nearlyEqual(rgb, c, 1);
            var hsl2 = blend.rgb2hsl2(c[0],c[1],c[2]);
            var rgb2 = blend.hsl2rgb2(hsl2[0],hsl2[1],hsl2[2]);
            assert.deepEqual(rgb2,rgb);
            nearlyEqual(hsl2, expected[index], 0.001);
            nearlyEqual(rgb2, c, 1);
        });
    });
});
